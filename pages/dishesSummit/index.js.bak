Page({
  data: {
    selectedCategory: '',
    selectedSubcategory: '',
    selectedIngredients: [],
    subcategoryOptions: [],
    ingredientOptions: [],
  },
  onLoad: function () {
    this.initializeCookingTimes();
  },
  inputName(e) {
    this.setData({ dishName: e.detail.value });
  },
  initializeCookingTimes: function () {
    let times = [];
    for (let i = 5; i <= 120; i += 5) {
      times.push(i + '分钟');
    }
    this.setData({
      cookingTimes: times
    });
    console.log(this.data.selectedIngredientsIndex);
  },
  onCategoryChange: function (e) {
    this.setData({
      selectedCategory: this.data.categories[e.detail.value]
    });
  },
  async onPickCategory(e) {
    const { value } = e.detail;
    const selectedCategory = value[0];

    this.setData({ selectedCategory });

    // Fetch subcategories for the selected category
    const subcategoriesResult = await db.collection('ingredients')
      .where({
        Category: selectedCategory,
      })
      .distinct('Subcategory')
      .get();

    const subcategories = subcategoriesResult.data;

    // Update the subcategory options
    this.updateSubcategoryOptions(subcategories);
  },

  updateSubcategoryOptions(subcategories) {
    const subcategoryOptions = subcategories.map((subcategory) => ({ label: subcategory }));

    this.setData({ subcategoryOptions });
  },

  async onPickSubcategory(e) {
    const { value } = e.detail;
    const selectedSubcategory = value[0];

    this.setData({ selectedSubcategory });

    // Fetch ingredients for the selected subcategory
    const ingredientsResult = await db.collection('ingredients')
      .where({
        Category: this.data.selectedCategory,
        Subcategory: selectedSubcategory,
      })
      .field({
        Ingredient: true,
      })
      .get();

    const ingredients = ingredientsResult.data.map(({ Ingredient }) => Ingredient);

    // Update the ingredient options
    this.updateIngredientOptions(ingredients);
  },

  updateIngredientOptions(ingredients) {
    const ingredientOptions = ingredients.map((ingredient) => ({ label: ingredient }));

    this.setData({ ingredientOptions });
  },

  onPickIngredient(e) {
    const { value } = e.detail;
    const selectedIngredient = value[0];

    let newSelectedIngredients = this.data.selectedIngredients.slice();
    newSelectedIngredients.push(selectedIngredient);
    this.setData({ selectedIngredients: newSelectedIngredients });
  },
});